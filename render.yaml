# render.yaml - Configuración de Render para SAM Metrología
# https://render.com/docs/blueprint-spec

services:
  # Servicio Web Principal
  - type: web
    name: sam-metrologia
    runtime: python
    plan: free  # Puedes cambiar a: starter, standard, pro
    region: oregon  # Región más cercana: ohio, oregon, frankfurt, singapore

    buildCommand: "./build.sh"
    startCommand: "./start.sh"

    # Archivos a incluir en el build
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.9

      - key: SECRET_KEY
        generateValue: true

      - key: DATABASE_URL
        fromDatabase:
          name: sam-metrologia-db
          property: connectionString

      - key: AWS_ACCESS_KEY_ID
        sync: false  # Debes configurarlo manualmente en Render Dashboard

      - key: AWS_SECRET_ACCESS_KEY
        sync: false  # Debes configurarlo manualmente en Render Dashboard

      - key: AWS_STORAGE_BUCKET_NAME
        sync: false  # Debes configurarlo manualmente en Render Dashboard

      - key: AWS_S3_REGION_NAME
        value: us-east-2  # Cambia según tu región de S3

      - key: DEBUG_VALUE
        value: False

      - key: RENDER_EXTERNAL_HOSTNAME
        value: sam-9o6o.onrender.com  # Cambia por tu dominio de Render

      # Configuraciones opcionales de email
      - key: EMAIL_HOST
        value: smtp.gmail.com
        sync: false

      - key: EMAIL_PORT
        value: 587

      - key: EMAIL_HOST_USER
        sync: false  # Configurar manualmente

      - key: EMAIL_HOST_PASSWORD
        sync: false  # Configurar manualmente

      - key: ADMIN_EMAIL
        value: metrologiasam@gmail.com

    # Health check endpoint
    healthCheckPath: /

    # Auto-deploy desde GitHub
    autoDeploy: true

    # Configuración de disco persistente (opcional para logs)
    disk:
      name: sam-logs
      mountPath: /opt/render/project/src/logs
      sizeGB: 1

  # Procesador de Cola ZIP (Background Worker)
  - type: worker
    name: sam-zip-processor
    runtime: python
    plan: free
    region: oregon

    buildCommand: "./build.sh"
    startCommand: "python manage.py process_zip_queue --check-interval 5 --cleanup-old"

    # Compartir variables de entorno con el servicio web
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.9

      - key: SECRET_KEY
        sync: false

      - key: DATABASE_URL
        fromDatabase:
          name: sam-metrologia-db
          property: connectionString

      - key: AWS_ACCESS_KEY_ID
        sync: false

      - key: AWS_SECRET_ACCESS_KEY
        sync: false

      - key: AWS_STORAGE_BUCKET_NAME
        sync: false

      - key: AWS_S3_REGION_NAME
        value: us-east-2

      - key: DEBUG_VALUE
        value: False

      - key: RENDER_EXTERNAL_HOSTNAME
        value: sam-9o6o.onrender.com

    # Auto-deploy desde GitHub
    autoDeploy: true

# Base de datos PostgreSQL
databases:
  - name: sam-metrologia-db
    databaseName: sam_db
    user: sam_user
    plan: free  # Puedes cambiar a: starter, standard, pro
    region: oregon  # Misma región que el servicio web
    ipAllowList: []  # Vacío = permite desde cualquier IP (Render managed)

# ===============================================================
# CRON JOBS - TAREAS AUTOMATICAS
# ===============================================================
# IMPORTANTE: Render usa UTC. Colombia es UTC-5
# Para convertir: Hora Colombia + 5 = Hora UTC
# Ejemplo: 8:00 AM Colombia = 13:00 UTC
# ===============================================================

cronJobs:
  # 1. NOTIFICACIONES DIARIAS - 8:00 AM Colombia (13:00 UTC)
  # Envía recordatorios de calibraciones, mantenimientos y comprobaciones
  - name: notificaciones-diarias
    schedule: "0 13 * * *"  # Diaria a las 13:00 UTC = 8:00 AM Colombia
    command: "python manage.py send_notifications --type consolidated"
    runtime: python
    plan: free
    region: oregon
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: sam-metrologia-db
          property: connectionString
      - key: SECRET_KEY
        sync: false
      - key: AWS_ACCESS_KEY_ID
        sync: false
      - key: AWS_SECRET_ACCESS_KEY
        sync: false
      - key: EMAIL_HOST_USER
        sync: false
      - key: EMAIL_HOST_PASSWORD
        sync: false

  # 2. MANTENIMIENTO DIARIO - 3:00 AM Colombia (8:00 UTC)
  # Ejecuta limpieza de cache, optimización DB, etc.
  - name: mantenimiento-diario
    schedule: "0 8 * * *"  # Diaria a las 8:00 UTC = 3:00 AM Colombia
    command: "python manage.py run_scheduled_tasks"
    runtime: python
    plan: free
    region: oregon
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: sam-metrologia-db
          property: connectionString
      - key: SECRET_KEY
        sync: false

  # 3. LIMPIEZA DE ARCHIVOS ZIP - Cada 6 horas
  # Elimina archivos ZIP temporales antiguos
  - name: limpieza-zips
    schedule: "0 */6 * * *"  # Cada 6 horas
    command: "python manage.py cleanup_zip_files --older-than-hours 6"
    runtime: python
    plan: free
    region: oregon
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: sam-metrologia-db
          property: connectionString
      - key: SECRET_KEY
        sync: false
      - key: AWS_ACCESS_KEY_ID
        sync: false
      - key: AWS_SECRET_ACCESS_KEY
        sync: false

  # 4. NOTIFICACIONES SEMANALES VENCIDAS - Lunes 8:00 AM Colombia (13:00 UTC)
  # Recordatorio semanal de actividades vencidas
  - name: notificaciones-vencidas-semanales
    schedule: "0 13 * * 1"  # Lunes 13:00 UTC = 8:00 AM Colombia
    command: "python manage.py send_notifications --type weekly_overdue"
    runtime: python
    plan: free
    region: oregon
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: sam-metrologia-db
          property: connectionString
      - key: SECRET_KEY
        sync: false
      - key: EMAIL_HOST_USER
        sync: false
      - key: EMAIL_HOST_PASSWORD
        sync: false

  # 5. VERIFICAR TRIALS EXPIRADOS - Diaria 5:00 AM Colombia (10:00 UTC)
  # Verifica y procesa empresas con periodo de prueba expirado
  - name: verificar-trials
    schedule: "0 10 * * *"  # Diaria a las 10:00 UTC = 5:00 AM Colombia
    command: "python manage.py check_trial_expiration"
    runtime: python
    plan: free
    region: oregon
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: sam-metrologia-db
          property: connectionString
      - key: SECRET_KEY
        sync: false

  # 6. LIMPIEZA DE NOTIFICACIONES ANTIGUAS - Domingos 4:00 AM Colombia (9:00 UTC)
  # Limpia notificaciones de más de 30 días
  - name: limpieza-notificaciones
    schedule: "0 9 * * 0"  # Domingos 9:00 UTC = 4:00 AM Colombia
    command: "python manage.py cleanup_notifications --days 30"
    runtime: python
    plan: free
    region: oregon
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: sam-metrologia-db
          property: connectionString
      - key: SECRET_KEY
        sync: false
